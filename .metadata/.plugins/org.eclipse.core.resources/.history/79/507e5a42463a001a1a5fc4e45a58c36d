package com.Graph.Problems;

public class LargestBooleanRegion {
	
	static int ROW, COL, count;
	
	static boolean isSafe(int [][] M, int row, int col, boolean[][] visited) {
		
		return ((row>=0) && (row< ROW) && (col>=0) && (col<COL) &&(M[row][col] == 1 && !visited[row][col]));
	}
	
	static void DFS(int[][] M, int row, int col, boolean[][] visited) {
		
		int[] rowNbr= {-1,-1,-1,0,0,1,1,1};
		int[] colNbr= {-1,0,1,-1,1,-1,0,1};
		
		visited[row][col]=true;
		
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
